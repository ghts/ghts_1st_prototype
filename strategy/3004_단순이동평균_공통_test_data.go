package base

import (
	공통 "pts/common"
	"time"
)

func 단순이동평균_도우미_테스트용_모의_데이터_1() *공통.S일일가격정보_모음 {
	일일가격정보_모음 := make([]*공통.C일일가격정보, 0)
	종목 := 공통.F종목_가상_1()
	var 식별코드 uint64 = 0
	일자, _ := time.Parse("2006-01-02", "2010-01-01")
	var 전일시가, 전일종가 float64 = 100000, 101000
	var 시가, 종가 float64

	for 인덱스 := 0; 인덱스 < 5; 인덱스++ {
		시가 = 전일시가 + 100
		전일시가 = 시가

		종가 = 전일종가 + 100
		전일종가 = 종가

		일일시세 := new(공통.S일일가격정보)
		일일시세.S식별코드(식별코드)
		일일시세.S종목(종목)
		일일시세.S일자(일자)
		일일시세.S시가(시가)
		일일시세.S종가(종가)

		if 시가 > 종가 {
			일일시세.S고가(시가)
			일일시세.S저가(종가)
		} else {
			일일시세.S고가(종가)
			일일시세.S저가(시가)
		}

		일일시세.S조정종가(종가)
		일일시세.S거래량(1000)
		일일시세.S전일종가(전일종가)
		일일시세.M조정가격재계산()

		전일종가 = 종가
		전일시가 = 시가
		일자 = 일자.AddDate(0, 0, 1)

		일일가격정보_모음 = append(일일가격정보_모음, 일일시세.M상수형구조체생성())
	}

	반환값 := new(공통.S일일가격정보_모음)
	반환값.S내용(일일가격정보_모음)

	return 반환값
}

func 단순이동평균_도우미_테스트용_모의_데이터_2() *공통.S일일가격정보_모음 {
	일일가격정보_모음 := make([]*공통.C일일가격정보, 0)
	종목 := 공통.F종목_가상_1()
	var 식별코드 uint64 = 0
	일자, _ := time.Parse("2006-01-02", "2010-01-01")
	var 전일시가, 전일종가 float64 = 100000, 101000
	var 시가, 종가 float64

	for 인덱스 := 0; 인덱스 < 7; 인덱스++ {
		if 인덱스 == 4 || 인덱스 == 5 {
			일일시세 := new(공통.S일일가격정보)
			일일시세.S식별코드(식별코드)
			일일시세.S종목(종목)
			일일시세.S일자(일자)
			일일시세.S시가(0)
			일일시세.S종가(0)
			일일시세.S조정종가(0)
			일일시세.S거래량(0)
			일일시세.S전일종가(0)
			일일시세.M조정가격재계산()

			일일가격정보_모음 = append(일일가격정보_모음, 일일시세.M상수형구조체생성())

			일자 = 일자.AddDate(0, 0, 1)

			continue
		}

		시가 = 전일시가 + 100
		전일시가 = 시가

		종가 = 전일종가 + 100
		전일종가 = 종가

		일일시세 := new(공통.S일일가격정보)
		일일시세.S식별코드(식별코드)
		일일시세.S종목(종목)
		일일시세.S일자(일자)
		일일시세.S시가(시가)
		일일시세.S종가(종가)

		if 시가 > 종가 {
			일일시세.S고가(시가)
			일일시세.S저가(종가)
		} else {
			일일시세.S고가(종가)
			일일시세.S저가(시가)
		}

		일일시세.S조정종가(종가)
		일일시세.S거래량(1000)
		일일시세.S전일종가(전일종가)
		일일시세.M조정가격재계산()

		전일종가 = 종가
		전일시가 = 시가
		일자 = 일자.AddDate(0, 0, 1)

		일일가격정보_모음 = append(일일가격정보_모음, 일일시세.M상수형구조체생성())
	}

	반환값 := new(공통.S일일가격정보_모음)
	반환값.S내용(일일가격정보_모음)

	return 반환값
}
