package base

import (
	공통 "pts/common"
	"time"
	//"log"
	//"errors"
	"fmt"
)

/*
단순이동평균에서 휴일이나 거래일이 아닌 날은 어떻게 처리하나?
1. 선형외삽 추정.
2. 없는 걸로 무시.
외삽할려면 기준이 모호하고 복잡하므로, 일단은 무시하는 것으로 하자.
*/

func 일일가격_단순이동평균_도우미(
	기간 int64, //  lookback period, 더 좋은 변수명 생각해볼 것.
	일일가격정보_모음 *공통.S일일가격정보_모음,
	시작시점 time.Time,
	종료시점 time.Time,
	시가가중치 float64,
	고가가중치 float64,
	저가가중치 float64,
	종가가중치 float64) (error, []*공통.S시점별실수값) {
	if 시가가중치+고가가중치+저가가중치+종가가중치 != 1.0 {
		에러 := fmt.Errorf("일일가격_단순이동평균_도우미() : 가중치 합이 1이 아님.\n"+
			"시가 가중치 : %v,\n"+
			"고가 가중치 : %v,\n"+
			"저가 가중치 : %v,\n"+
			"종가 가중치 : %v,\n"+
			"합계 : %v",
			시가가중치, 고가가중치, 저가가중치, 종가가중치,
			시가가중치+고가가중치+저가가중치+종가가중치)
		return 에러, nil
	}

	내용 := 일일가격정보_모음.G내용()

	단순이동평균값_모음 := make([]*공통.S시점별실수값, 0)

	// "일일가격정보_모음"은 항상 날짜순으로 정렬되어 있음.
	for 인덱스, 일일가격정보 := range 내용 {
		//log.Println(인덱스, "CP 0. 시작", 일일가격정보.G일자())

		if 일일가격정보.G일자().Before(시작시점) ||
			일일가격정보.G일자().After(종료시점) {
			//log.Println(인덱스, "CP 1. 날짜가 범위 밖임.", 일일가격정보.G일자())
			continue
		}

		// 잘못된 가격정보 무시. 거래일이 아닌 경우에는 단순이동평균값 구할 필요 없음.
		if 일일가격정보.G시가() == 0.0 ||
			일일가격정보.G고가() == 0.0 ||
			일일가격정보.G저가() == 0.0 ||
			일일가격정보.G종가() == 0.0 {
			//log.Println(인덱스, "CP 2. 잘못된 가격정보")
			continue
		}

		남은_기간 := 기간
		내부_인덱스 := 인덱스
		var 합계 float64 = 0.0

		//log.Println(인덱스, "CP 3. 기본 확인 통과.")

		for {
			if 남은_기간 <= 0 {
				//log.Println(인덱스, "CP 4. 합계 =", 합계)
				break
			}

			if 내부_인덱스 < 0 {
				//log.Println(인덱스, "CP 5. 기간이 남았으나 내부 인덱스가 음수. 합계 = 0")
				합계 = 0.0
				break
			}

			if 내용[내부_인덱스].G시가() == 0.0 ||
				내용[내부_인덱스].G고가() == 0.0 ||
				내용[내부_인덱스].G저가() == 0.0 ||
				내용[내부_인덱스].G종가() == 0.0 {
				//log.Println(인덱스, "CP 6. 잘못된 가격정보.", 내용[내부_인덱스].G일자())
				내부_인덱스 = 내부_인덱스 - 1
				continue
			}

			합계 = 합계 +
				시가가중치*내용[내부_인덱스].G시가() +
				고가가중치*내용[내부_인덱스].G고가() +
				저가가중치*내용[내부_인덱스].G저가() +
				종가가중치*내용[내부_인덱스].G종가()

			//log.Println(인덱스, "CP 7 중간합계",  합계, "내부 일자", 내용[내부_인덱스].G일자(), "내부 인덱스", 내부_인덱스, "남은 기간", 남은_기간, "가격정보", 내용[내부_인덱스].G시가(), 내용[내부_인덱스].G고가(), 내용[내부_인덱스].G저가(), 내용[내부_인덱스].G종가())

			내부_인덱스 = 내부_인덱스 - 1
			남은_기간 = 남은_기간 - 1
		}

		//log.Println(인덱스, "CP 8 최종합계", 합계)

		평균값 := 합계 / float64(기간)

		//log.Println(인덱스, "CP 9 평균", 평균값)

		일자_평균값 := 공통.F시점별실수값생성(일일가격정보.G일자(), 평균값)

		단순이동평균값_모음 = append(단순이동평균값_모음, 일자_평균값)
	}

	return nil, 단순이동평균값_모음
}
