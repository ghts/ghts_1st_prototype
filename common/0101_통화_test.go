package common

import (
	"testing"
)

func TestF원화_생성(테스트 *testing.T) {
	원화 := F원화_생성(1000.09)
	
	if 원화.G종류() != KRW ||
		원화.G소숫점_이하_자릿수() != 0 ||
		원화.G금액() != 1000.0 ||
		원화.G정확한_금액()
		

	G종류() string
	G소숫점_이하_자릿수() int
	G금액() float64
	G정확한_금액() *big.Rat
	
	
	// TODO
	통화 := F통화_생성(100.004)
	
	통화1 := 통화.G값()
	if 통화1 != 100.0 {
		테스트.Error("TestC통화() 에러 1")
	}
	통화1 = 통화1 + 10.0
	
	통화2 := 통화.G값()
	if 통화2 != 100.0 {
		테스트.Error("TestC통화() 에러 2")
	}
	
	통화 = F통화_생성(100.005)
	
	if 통화.G값() != F반올림_통화(통화.G값()) {
		테스트.Errorf("TestC통화() : G값() 불일치.예상값 %v, 실제값 %v.", F반올림_통화(통화.G값()), 통화.G값())
	}
}

func TestS통화(테스트 *testing.T) {
	var 통화_구조체_인터페이스 I통화_구조체 = new(s통화)
	
	// TODO 바뀐 구조에 따라 수정할 것.
	
	
	통화 := new(S통화)
	통화.S값(100.004)
	
	통화1 := 통화.G값()
	if 통화1 != 100.0 {
		테스트.Error("TestC통화() 에러 1")
	}
	통화1 = 통화1 + 10.0
	
	통화2 := 통화.G값()
	if 통화2 != 100.0 {
		테스트.Error("TestC통화() 에러 2")
	}
	
	통화.S값(100.005)
	
	if 통화.G값() != F반올림_통화(통화.G값()) {
		테스트.Errorf("TestS통화() : G값() 불일치.예상값 %v, 실제값 %v.", F반올림_통화(통화.G값()), 통화.G값())
	}
	
	var 구조체 *S통화 = F통화_구조체_생성(통화.G값())
	if 구조체.G값() != 통화.G값() {
		테스트.Errorf("TestS통화() : F통화_구조체_생성() 불일치.예상값 %v, 실제값 %v.", 통화.G값(), 구조체.G값())
	}
	
	var 상수형 *C통화 = 통화.G상수형()
	
	if 상수형.G값() != 통화.G값() {
		테스트.Errorf("TestS통화() : G상수형() 불일치.예상값 %v, 실제값 %v.", 통화.G값(), 상수형.G값())
	}
}