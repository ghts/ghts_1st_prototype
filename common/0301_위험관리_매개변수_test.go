package common

import (
	"testing"
)

func TestS위험관리_매개변수(테스트 *testing.T) {
	전략 := F테스트용_비어있는_전략(100)
	종목 := F종목_동화약품()
	수량 := int64(100)
	단가 := float64(100.0005)
	
	매개변수_모음 := new(S매개변수_모음)
	매개변수_모음.S추가("정수", int(1))
	매개변수_모음.S추가("실수", float64(1.1))
	매개변수_모음.S추가("문자열", "테스트용_문자열")	
	
	s := F위험관리_매개변수_생성(전략, 종목, 수량, 단가, 매개변수_모음)
	
	if s.G전략().G식별코드() != 전략.G식별코드() {
		테스트.Error("common.TestS위험관리_매개변수() : G전략() 에러.")
	}
	
	if s.G종목().G종목코드() != 종목.G종목코드() {
		테스트.Error("common.TestS위험관리_매개변수() : G종목() 에러.")
	}
	
	if s.G수량() != 수량 {
		테스트.Error("common.TestS위험관리_매개변수() : G수량() 에러.")
	}
	
	if s.G단가() != F반올림_통화(단가) {
		테스트.Error("common.TestS위험관리_매개변수() : G단가() 에러.")
	}
	
	if s.G금액() != F반올림_통화(float64(수량) * s.G단가()) {
		테스트.Error("common.TestS위험관리_매개변수() : G금액() 에러.")
	}
	
	if s.G값("정수").(int) != 1 ||
		s.G값("실수").(float64) != 1.1 ||
		s.G값("문자열").(string) != "테스트용_문자열" {
		테스트.Error("common.TestS위험관리_매개변수() : G값() 에러.")
	}
	
	정수, _ := s.G가변형("정수").G정수()
	실수, _ := s.G가변형("실수").G실수()
	문자열, _ := s.G가변형("문자열").G문자열()
	
	if 정수 != 1 ||
		실수 != 1.1 ||
		문자열 != "테스트용_문자열" {
		테스트.Error("common.TestS위험관리_매개변수() : G가변형() 에러.")
	}
	
	if len(s.G매개변수_모음()) != 3 {
		테스트.Errorf("common.TestS위험관리_매개변수() : len(G매개변수_모음()) 불일치. 예상값 3, 실제값 %v.", len(s.G매개변수_모음()))
	}
}