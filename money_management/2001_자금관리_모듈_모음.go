package money_management

import (
	공통 "common"
)

type S전략_자금관리_모듈_모음 struct {
	자금관리_모듈_모음 []공통.I전략_자금관리
}

func (s *S전략_자금관리_모듈_모음) M자금관리_모듈_추가(자금관리_모듈 공통.I전략_자금관리) {
	if s.자금관리_모듈_모음 == nil {
		s.자금관리_모듈_모음 = make([]공통.I전략_자금관리, 0)
	}

	s.자금관리_모듈_모음 = append(s.자금관리_모듈_모음, 자금관리_모듈)
}

func (s *S전략_자금관리_모듈_모음) G주문수량(신호 *공통.C신호) int64 {
	var 최소수량 int64 = 0

	for _, 자금관리_모듈 := range s.자금관리_모듈_모음 {
		주문수량 := 자금관리_모듈.G주문수량(신호)

		if 최소수량 == 0 &&
			주문수량 > 0 {
			최소수량 = 주문수량
		} else if 주문수량 < 최소수량 {
			최소수량 = 주문수량
		}
	}

	return 최소수량
}
